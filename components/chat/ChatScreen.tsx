'use client'
import {useRef,useEffect,FormEvent} from 'react'
type FileInfo={url:string; mime?:string}
type Msg={id:string|number; role:'user'|'assistant'; content:string; files?:FileInfo[]}
type Preset={label:string; prompt:string}
export default function ChatScreen({messages=[], onSend, onAttach, presets=[]}:{messages:Msg[],onSend:(t:string)=>void,onAttach:(f:File)=>void,presets?:Preset[]}){const ref=useRef<HTMLDivElement>(null);useEffect(()=>{const el=ref.current;if(!el)return;try{el.scrollTo({top:el.scrollHeight,behavior:'smooth'})}catch{el.scrollTop=el.scrollHeight}},[messages]);const submit=(e:FormEvent<HTMLFormElement>)=>{e.preventDefault();const input=(e.currentTarget.elements.namedItem('text') as HTMLInputElement);const v=input?.value.trim();if(!v)return;onSend(v);e.currentTarget.reset();};return(<div className='flex flex-col h-[100dvh]' style={{backgroundImage:'url(/bg/background_mobile.jpg)',backgroundSize:'cover'}}>{presets.length>0&&<div className='p-3 overflow-x-auto'><div className='flex gap-2'>{presets.map(p=>(<button key={p.label} type='button' className='btn text-xs whitespace-nowrap' onClick={()=>onSend(p.prompt)}>{p.label}</button>))}</div></div>}<div ref={ref} className='flex-1 overflow-y-auto space-y-3 p-3'>{messages.map(m=>(<div key={m.id} className={m.role==='user'?'text-right':'text-left'}><div className={'inline-block max-w-[84%] rounded-2xl px-3 py-2 '+(m.role==='user'?'bg-white/10':'bg-white/5 border border-white/10')}><div className='whitespace-pre-wrap text-sm'>{m.content}</div>{Array.isArray(m.files)&&m.files.length>0&&(<div className='mt-2 grid grid-cols-2 gap-2'>{m.files.map(f=>(<a key={f.url} href={f.url} target='_blank' rel='noreferrer' className='group relative rounded-xl overflow-hidden border border-white/10'>{(f.mime||'').startsWith('image/')?(<img src={f.url} alt='' className='w-full h-auto'/>):(<div className='p-3 text-xs opacity-80'>{f.mime||'файл'}</div>)}</a>))}</div>)}</div></div>))}</div><div className='p-3 border-t border-white/10 bg-black/30 backdrop-blur'><form onSubmit={submit} className='flex items-center gap-2'><input name='text' required placeholder='Опишите задачу…' className='flex-1 rounded-xl bg-white/5 border border-white/10 px-3 py-2 outline-none placeholder:text-slate-400 focus:bg-white/10'/><input type='file' className='hidden' id='filePick' onChange={e=>e.target.files?.[0]&&onAttach(e.target.files[0])}/><label htmlFor='filePick' className='btn cursor-pointer'>Прикрепить</label><button type='submit' className='btn font-semibold'>Отправить</button></form></div></div>)}
